import asyncio
import os
import cv2
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN = os.getenv('API_TOKEN')
VIDEO_FILENAME = "recorded_video.mp4"
RECORD_DURATION_SEC = 5
FPS = 30
FOURCC = cv2.VideoWriter_fourcc(*'mp4v')
CAMERA_INDEX = 0

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


def record_video(filename: str, duration: int, fps: int, seconds: int) -> bool:

    cap = cv2.VideoCapture(CAMERA_INDEX)
    if not cap.isOpened():
        return False

    cap.set(cv2.CAP_PROP_FPS, fps)

    frame_width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
    frame_height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))

    out = cv2.VideoWriter(filename, FOURCC, fps, (frame_width, frame_height))

    total_frames = duration * fps
    frames_recorded = 0

    print(f"–ù–∞—á–∞–ª–æ –∑–∞–ø–∏—Å–∏ {duration} —Å–µ–∫—É–Ω–¥ –≤–∏–¥–µ–æ ({frame_width}x{frame_height} @ {fps} FPS)...")

    while frames_recorded < total_frames:
        ret, frame = cap.read()

        if ret:
            out.write(frame)
            frames_recorded += 1

        else:
            print("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞–¥—Ä.")
            break

    cap.release()
    out.release()

    cv2.destroyAllWindows()

    if frames_recorded == total_frames:
        print(f"–ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í–∏–¥–µ–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫: {filename}")
        return True
    else:
        print(f"–ó–∞–ø–∏—Å—å –ø—Ä–µ—Ä–≤–∞–Ω–∞. –ó–∞–ø–∏—Å–∞–Ω–æ –∫–∞–¥—Ä–æ–≤: {frames_recorded}/{total_frames}")
        return False


@dp.message(Command("camera_record"))
async def handle_record_and_send(message: types.Message):
    chat_id = message.chat.id

    await message.answer("üé• –ù–∞—á–∏–Ω–∞—é –∑–∞–ø–∏—Å—å 5-—Å–µ–∫—É–Ω–¥–Ω–æ–≥–æ –≤–∏–¥–µ–æ...")

    loop = asyncio.get_running_loop()
    try:
        success = await loop.run_in_executor(
            None, record_video, VIDEO_FILENAME, RECORD_DURATION_SEC, FPS
        )
    except Exception as e:
        await message.answer(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤–∏–¥–µ–æ: {e}")
        return

    if success and os.path.exists(VIDEO_FILENAME):
        await message.answer("‚úÖ –ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ...")

        try:
            video_file = types.FSInputFile(VIDEO_FILENAME)

            await bot.send_video(
                chat_id=chat_id,
                video=video_file,
                caption="–í–∏–¥–µ–æ —Å –≤–µ–±-–∫–∞–º–µ—Ä—ã (5 —Å–µ–∫, 30 FPS)"
            )
            await message.answer("üéâ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")

        except Exception as e:
            await message.answer(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ: {e}")

        finally:
            os.remove(VIDEO_FILENAME)
            print(f"–õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª {VIDEO_FILENAME} —É–¥–∞–ª–µ–Ω.")

    else:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –≤–∏–¥–µ–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤–µ–±-–∫–∞–º–µ—Ä—ã.")


async def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–ø—Ä–æ—Å –±–æ—Ç–∞."""
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /000...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")